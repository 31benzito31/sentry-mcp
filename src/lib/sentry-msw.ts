import { setupServer } from "msw/node";
import { http, HttpResponse } from "msw";

export const restHandlers = [
  http.get("https://sentry.io/api/0/organizations/", () => {
    return HttpResponse.json([
      {
        id: "4509106740723712",
        slug: "sentry-mcp-evals",
        name: "sentry-mcp-evals",
      },
    ]);
  }),
  http.get(
    "https://sentry.io/api/0/organizations/sentry-mcp-evals/teams/",
    () => {
      return HttpResponse.json([
        {
          id: "4509106740854784",
          slug: "sentry-mcp-evals",
          name: "sentry-mcp-evals",
          dateCreated: "2025-04-06T14:11:23.961739Z",
          isMember: true,
          teamRole: "admin",
          flags: { "idp:provisioned": false },
          access: [
            "team:read",
            "alerts:read",
            "event:write",
            "team:write",
            "team:admin",
            "event:read",
            "org:read",
            "member:read",
            "project:admin",
            "project:write",
            "org:integrations",
            "project:releases",
            "alerts:write",
            "event:admin",
            "project:read",
          ],
          hasAccess: true,
          isPending: false,
          memberCount: 1,
          avatar: { avatarType: "letter_avatar", avatarUuid: null },
          externalTeams: [],
          projects: [],
        },
      ]);
    },
  ),
  http.get(
    "https://sentry.io/api/0/organizations/sentry-mcp-evals/projects/",
    () => {
      return HttpResponse.json([
        {
          team: {
            id: "4509106733776896",
            slug: "sentry-mcp-evals",
            name: "sentry-mcp-evals",
          },
          teams: [
            {
              id: "4509106733776896",
              slug: "sentry-mcp-evals",
              name: "sentry-mcp-evals",
            },
          ],
          id: "4509106749636608",
          name: "test-suite",
          slug: "test-suite",
          isBookmarked: false,
          isMember: true,
          access: [
            "event:admin",
            "alerts:read",
            "project:write",
            "org:integrations",
            "alerts:write",
            "member:read",
            "team:write",
            "project:read",
            "event:read",
            "event:write",
            "project:admin",
            "org:read",
            "team:admin",
            "project:releases",
            "team:read",
          ],
          hasAccess: true,
          dateCreated: "2025-04-06T14:13:37.825970Z",
          environments: [],
          eventProcessing: { symbolicationDegraded: false },
          features: [
            "discard-groups",
            "alert-filters",
            "similarity-embeddings",
            "similarity-indexing",
            "similarity-view",
          ],
          firstEvent: null,
          firstTransactionEvent: false,
          hasSessions: false,
          hasProfiles: false,
          hasReplays: false,
          hasFeedbacks: false,
          hasNewFeedbacks: false,
          hasMonitors: false,
          hasMinifiedStackTrace: false,
          hasInsightsHttp: false,
          hasInsightsDb: false,
          hasInsightsAssets: false,
          hasInsightsAppStart: false,
          hasInsightsScreenLoad: false,
          hasInsightsVitals: false,
          hasInsightsCaches: false,
          hasInsightsQueues: false,
          hasInsightsLlmMonitoring: false,
          platform: "node",
          platforms: [],
          latestRelease: null,
          hasUserReports: false,
          hasFlags: false,
          latestDeploys: null,
        },
      ]);
    },
  ),
  http.post(
    "https://sentry.io/api/0/organizations/sentry-mcp-evals/teams/",
    () => {
      // TODO: validate payload (only accept 'the-goats' for team name)
      return HttpResponse.json({
        id: "4509109078196224",
        slug: "the-goats",
        name: "the-goats",
        dateCreated: "2025-04-07T00:05:48.196710Z",
        isMember: true,
        teamRole: "admin",
        flags: { "idp:provisioned": false },
        access: [
          "event:read",
          "org:integrations",
          "org:read",
          "member:read",
          "alerts:write",
          "event:admin",
          "team:admin",
          "project:releases",
          "team:read",
          "project:write",
          "event:write",
          "team:write",
          "project:read",
          "project:admin",
          "alerts:read",
        ],
        hasAccess: true,
        isPending: false,
        memberCount: 1,
        avatar: { avatarType: "letter_avatar", avatarUuid: null },
      });
    },
  ),
  http.post(
    "https://sentry.io/api/0/teams/sentry-mcp-evals/sentry-mcp-evals/projects/",
    () => {
      // TODO: validate payload (only accept 'cloudflare-mcp' for project name)
      return HttpResponse.json({
        id: "4509109104082945",
        slug: "cloudflare-mcp",
        name: "cloudflare-mcp",
        platform: "javascript",
        dateCreated: "2025-04-07T00:12:23.143074Z",
        isBookmarked: false,
        isMember: true,
        features: [
          "discard-groups",
          "alert-filters",
          "similarity-embeddings",
          "similarity-indexing",
          "similarity-view",
        ],
        firstEvent: null,
        firstTransactionEvent: false,
        access: [
          "team:write",
          "alerts:write",
          "event:write",
          "org:read",
          "alerts:read",
          "event:admin",
          "project:admin",
          "event:read",
          "org:integrations",
          "project:read",
          "project:releases",
          "project:write",
          "member:read",
          "team:read",
          "team:admin",
        ],
        hasAccess: true,
        hasMinifiedStackTrace: false,
        hasMonitors: false,
        hasProfiles: false,
        hasReplays: false,
        hasFeedbacks: false,
        hasFlags: false,
        hasNewFeedbacks: false,
        hasSessions: false,
        hasInsightsHttp: false,
        hasInsightsDb: false,
        hasInsightsAssets: false,
        hasInsightsAppStart: false,
        hasInsightsScreenLoad: false,
        hasInsightsVitals: false,
        hasInsightsCaches: false,
        hasInsightsQueues: false,
        hasInsightsLlmMonitoring: false,
        isInternal: false,
        isPublic: false,
        avatar: { avatarType: "letter_avatar", avatarUuid: null },
        color: "#bf3f55",
        status: "active",
      });
    },
  ),
  http.post(
    "https://sentry.io/api/0/projects/sentry-mcp-evals/cloudflare-mcp/keys/",
    () => {
      // TODO: validate payload (only accept 'Default' for key name)
      return HttpResponse.json({
        id: "d20df0a1ab5031c7f3c7edca9c02814d",
        name: "Default",
        label: "Default",
        public: "d20df0a1ab5031c7f3c7edca9c02814d",
        secret: "154001fd3dfe38130e1c7948a323fad8",
        projectId: 4509109104082945,
        isActive: true,
        rateLimit: null,
        dsn: {
          secret:
            "https://d20df0a1ab5031c7f3c7edca9c02814d:154001fd3dfe38130e1c7948a323fad8@o4509106732793856.ingest.us.sentry.io/4509109104082945",
          public:
            "https://d20df0a1ab5031c7f3c7edca9c02814d@o4509106732793856.ingest.us.sentry.io/4509109104082945",
          csp: "https://o4509106732793856.ingest.us.sentry.io/api/4509109104082945/csp-report/?sentry_key=d20df0a1ab5031c7f3c7edca9c02814d",
          security:
            "https://o4509106732793856.ingest.us.sentry.io/api/4509109104082945/security/?sentry_key=d20df0a1ab5031c7f3c7edca9c02814d",
          minidump:
            "https://o4509106732793856.ingest.us.sentry.io/api/4509109104082945/minidump/?sentry_key=d20df0a1ab5031c7f3c7edca9c02814d",
          nel: "https://o4509106732793856.ingest.us.sentry.io/api/4509109104082945/nel/?sentry_key=d20df0a1ab5031c7f3c7edca9c02814d",
          unreal:
            "https://o4509106732793856.ingest.us.sentry.io/api/4509109104082945/unreal/d20df0a1ab5031c7f3c7edca9c02814d/",
          crons:
            "https://o4509106732793856.ingest.us.sentry.io/api/4509109104082945/cron/___MONITOR_SLUG___/d20df0a1ab5031c7f3c7edca9c02814d/",
          cdn: "https://js.sentry-cdn.com/d20df0a1ab5031c7f3c7edca9c02814d.min.js",
        },
        browserSdkVersion: "8.x",
        browserSdk: {
          choices: [
            ["9.x", "9.x"],
            ["8.x", "8.x"],
            ["7.x", "7.x"],
          ],
        },
        dateCreated: "2025-04-07T00:12:25.139394Z",
        dynamicSdkLoaderOptions: {
          hasReplay: true,
          hasPerformance: true,
          hasDebug: false,
        },
      });
    },
  ),
  http.get(
    "https://sentry.io/api/0/organizations/sentry-mcp-evals/events/",
    () => {
      return HttpResponse.json({
        data: [
          {
            "issue.id": 6114575469,
            title: "TRPCError: client_login_timeout",
            project: "peated",
            "count()": 2,
            "last_seen()": "2025-04-07T12:23:39+00:00",
            issue: "PEATED-31R",
          },
        ],
        meta: {
          fields: {
            "issue.id": "integer",
            title: "string",
            project: "string",
            "count()": "integer",
            "last_seen()": "date",
          },
          units: {
            "issue.id": null,
            title: null,
            project: null,
            "count()": null,
            "last_seen()": null,
          },
          isMetricsData: false,
          isMetricsExtractedData: false,
          tips: { query: null, columns: null },
          datasetReason: "unchanged",
          dataset: "errors",
        },
      });
    },
  ),
  http.get(
    "https://sentry.io/api/0/organizations/sentry-mcp-evals/issues/PEATED-31R/events/latest/",
    () => {
      return HttpResponse.json({
        id: "a0fae0e86c2a4d3dbdb2881f64f1334c",
        groupID: "6114575469",
        eventID: "a0fae0e86c2a4d3dbdb2881f64f1334c",
        projectID: "4505138086019073",
        size: 47679,
        entries: [
          { data: [Object], type: "exception" },
          { data: [Object], type: "breadcrumbs" },
          { data: [Object], type: "request" },
        ],
        dist: null,
        message: "",
        title: "TRPCError: client_login_timeout",
        location: "/app/apps/server/src/trpc/routes/bottleList.ts",
        user: {
          id: null,
          email: null,
          username: null,
          ip_address: "127.0.0.6",
          name: null,
          geo: null,
          data: null,
        },
        contexts: {
          app: {
            app_start_time: "2025-04-07T08:13:00.039Z",
            app_memory: 936808448,
            free_memory: 0,
            type: "app",
          },
          cloud_resource: { type: "default" },
          culture: { locale: "en-US", timezone: "UTC", type: "default" },
          device: {
            arch: "x64",
            memory_size: 3692150784,
            free_memory: 2514296832,
            boot_time: "2025-03-31T00:42:52.531Z",
            processor_count: 3,
            cpu_description: "Intel(R) Xeon(R) CPU @ 2.60GHz",
            processor_frequency: 0,
            type: "device",
          },
          os: {
            os: "Debian 12.10\n",
            name: "Debian",
            version: "12.10\n",
            kernel_version: "6.12.8",
            type: "os",
          },
          runtime: {
            runtime: "node v22.14.0",
            name: "node",
            version: "v22.14.0",
            type: "runtime",
          },
          trace: {
            trace_id: "2e64826159c2392d77cfbe0060a4f09d",
            span_id: "ee51711e87ed7d94",
            parent_span_id: "06e1ae554cc9ccc4",
            status: "unknown",
            client_sample_rate: 1,
            type: "trace",
          },
          trpc: {
            __sentry_override_normalization_depth__: 6,
            input: [{}],
            procedure_path: "bottleList",
            procedure_type: "query",
            type: "default",
          },
        },
        sdk: { name: "sentry.javascript.node", version: "9.6.0-alpha.0" },
        context: {},
        packages: {},
        type: "error",
        metadata: {
          filename: "/app/apps/server/src/trpc/routes/bottleList.ts",
          function: "bottleList",
          in_app_frame_mix: "mixed",
          type: "TRPCError",
          value: "client_login_timeout",
        },
        tags: [
          { key: "environment", value: "production" },
          { key: "handled", value: "yes" },
          { key: "level", value: "error" },
          { key: "mechanism", value: "generic" },
          { key: "os", value: "Debian 12.10" },
          { key: "os.name", value: "Debian" },
          {
            key: "release",
            value: "e76d207005ef66ad4fc9a197a81587ab96a92185",
          },
          { key: "runtime", value: "node v22.14.0" },
          { key: "runtime.name", value: "node" },
          { key: "server_name", value: "api-59684cb6f8-s7fnp" },
          { key: "service", value: "@peated/api" },
          { key: "transaction", value: "GET /trpc/bottleList" },
          { key: "url", value: "http://api.peated.com/trpc/bottleList" },
          {
            key: "user",
            value: "ip:127.0.0.6",
            query: 'user.ip:"127.0.0.6"',
          },
        ],
        platform: "node",
        dateReceived: "2025-04-07T12:23:39.862684Z",
        errors: [
          {
            type: "js_no_source",
            message: "Source code was not found",
            data: [Object],
          },
        ],
        occurrence: null,
        _meta: {
          entries: {},
          message: null,
          user: null,
          contexts: null,
          sdk: null,
          context: null,
          packages: null,
          tags: {},
        },
        crashFile: null,
        culprit: "GET /trpc/bottleList",
        dateCreated: "2025-04-07T12:23:39Z",
        fingerprints: [
          "3f27d5e88b28599c81e68b94e9c849dd",
          "bf1eb58f397647b338ccb1bd4e31aa72",
        ],
        groupingConfig: {
          enhancements: "KLUv_SAYwQAAkwKRs25ld3N0eWxlOjIwMjMtMDEtMTGQ",
          id: "newstyle:2023-01-11",
        },
        release: {
          id: 1391160760,
          version: "e76d207005ef66ad4fc9a197a81587ab96a92185",
          status: "open",
          shortVersion: "e76d207005ef66ad4fc9a197a81587ab96a92185",
          versionInfo: {
            package: null,
            version: [],
            description: "e76d207005ef",
            buildHash: "e76d207005ef66ad4fc9a197a81587ab96a92185",
          },
          ref: null,
          url: null,
          dateReleased: "2025-03-31T00:39:51.619152Z",
          dateCreated: "2025-03-31T00:38:28.193657Z",
          data: {},
          newGroups: 3,
          owner: null,
          commitCount: 1,
          lastCommit: {
            id: "e76d207005ef66ad4fc9a197a81587ab96a92185",
            message: "Grab abv from smws",
            dateCreated: "2025-03-31T00:38:20Z",
            pullRequest: null,
            suspectCommitType: "",
            repository: [],
            author: [],
            releases: [],
          },
          deployCount: 0,
          lastDeploy: null,
          authors: [[]],
          projects: [[]],
          firstEvent: "2025-03-31T05:50:04Z",
          lastEvent: "2025-04-08T20:25:06Z",
          currentProjectMeta: {},
          userAgent: "sentry_vercel/25.4.0.dev0",
        },
        userReport: null,
        sdkUpdates: [
          {
            type: "updateSdk",
            sdkName: "sentry.javascript.node",
            newSdkVersion: "9.12.0",
            sdkUrl: "https://docs.sentry.io/platforms/javascript",
            enables: [],
          },
        ],
        resolvedWith: [null],
        nextEventID: null,
        previousEventID: "7fd7e8c6e24744a4b9972111cee776d9",
      });
    },
  ),
];

export const mswServer = setupServer(...restHandlers);
